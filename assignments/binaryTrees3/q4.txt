class Solution {
public:
    TreeNode* helper(vector<int>& pre, int prelo, int prehi, vector<int>& post,int postlo, int posthi){
     if(prelo>prehi) return NULL;
     if(postlo>posthi) return NULL;
     TreeNode* root = new TreeNode(pre[prelo]);
     if(prelo==prehi) return root; 
     int i = postlo;
     while(post[i]!=pre[prelo+1]){
      i++;
     }
     int len = i-postlo+1;
     root->left = helper(pre,prelo+1,prelo+len,post,postlo,i);
     root->right=helper(pre,prelo+len+1,prehi,post,i+1,posthi-1);
     return root;
    }
    TreeNode* constructFromPrePost(vector<int>& pre, vector<int>& post) {
        int n = pre.size();
        return helper(pre,0,n-1,post,0,n-1);
    }
};